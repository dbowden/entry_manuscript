panel <- read.csv("panel.csv")
library(vimcom)
install.packages("vimcom")
library(vimcom)
download.file("http://www.lepem.ufc.br/jaa/vimcom.plus_0.9-93.tar.gz",#
              destfile = "vimcom.plus_0.9-93.tar.gz")
install.packages("vimcom.plus_0.9-93.tar.gz", type = "source",#
                  repos = NULL)
install.packages("devtools")
install.packages("vimcom.plus_0.9-93.tar.gz", type = "source",#
                  repos = NULL)
library(vimcom.plus)
require(ggplot2)
fdiRisk<-read.csv("http://dl.dropboxusercontent.com/u/10692900/fdiRisk.csv")
library(vimcom.plus)
ls()
panel <- read.csv("panel.csv")
anel <- read.csv("panel.csv")
FullData <- read.csv("http://dl.dropboxusercontent.com/u/10692900/FDI_AGaIN/merge3_noDups.csv")
FullData$FDI_perGDPlag = NA#
FullData$FDI_netInflowlag = NA#
FullData$FDI_netInflowPerGDPlag = NA#
#
for(i in 2:length(FullData$X))#
{#
 if(FullData$cown[i]==FullData$cown[i-1] && FullData$year[i]==(FullData$year[i-1]+1)) #
 { #If the previous entry is for the same country and the subsequent year, fill a lagged variable#
   FullData$FDI_perGDPlag[i] <- FullData$FDI_perGDP[i-1]#
   FullData$FDI_netInflowlag[i] <- FullData$FDI_netInflow[i-1]#
   FullData$FDI_netInflowPerGDPlag[i] <- FullData$FDI_netInflowPerGDP[i-1]#
 }#
}
library(plm)
FullData <- pdata.frame(FullData,c("cown","year"))
FullData$PKO3 <- ifelse(!is.na(FullData$PKO)==1 | !is.na(lag(FullData$PKO,1))==1 | !is.na(lag(FullData$PKO,2))==1, 1, 0)
FullData$Credible_Outcome <- ifelse(FullData$Outcome==1 | FullData$Outcome==4, 1, 0)
FullData$Agreement <- ifelse(FullData$Outcome==1, 1, 0)
spec1 <- FDI_netInflowPerGDP ~ GDP_PPP_2005 + GDP_growth + InstDemo + Population + Natrual_Resource_Rents + Type + Outcome + !is.na(PKO)#
#
spec2 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDPlag) + GDP_PPP_2005 + GDP_growth + InstDemo + Population + Natrual_Resource_Rents + Type + Outcome + !is.na(PKO)#
#
spec3 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDPlag) + lag(GDP_PPP_2005) + lag(GDP_growth) + lag(InstDemo) + lag(Population) + lag(Natrual_Resource_Rents) + lag(Type) + lag(Outcome) + lag(!is.na(PKO))#
#
spec4 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDP,1) + GDP_PPP_2005 + lag(GDP_growth,0:2) + Population + InstDemo + lag(Natrual_Resource_Rents,0:2) + Outcome + !is.na(PKO)==1#
#
spec5 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDP,1) + lag(GDP_growth,0:1) + Natrual_Resource_Rents + Credible_Outcome + PKO3#
#
spec6 <- diff(FDI_netInflowPerGDP) ~ Agreement + PKO3 + InstDemo + GDP_growth + Natrual_Resource_Rents#
#
spec7 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDP,1) + lag(GDP_growth,0:1) + Natrual_Resource_Rents + Agreement + PKO3
summary(fe1)
fe1 <- plm(spec1,data=FullData,model="within",effect="twoway")
summary(fe1)
gmmspec1 <- FDI_netInflowPerGDP ~ lag(FDI_netInflowPerGDP,1) + lag(GDP_growth,0:1) + Natrual_Resource_Rents + GDP_PPP_2005 + Agreement + PKO3 | lag(GDP_PPP_2005,1:2) + lag(GDP_growth,2:3) + lag(Natrual_Resource_Rents,1:2)
panel <- subset(FullData,select=c(country,year))
panel$dup <- ifelse(duplicated(panel)==T,1,0)
FullData$dup <- panel$dup
FullData <- subset(FullData,dup==0)
gmm1 <- pgmm(gmmspec1,data=FullData,effect="twoways",model="onestep")
traceback()
summary(cars)
quit(save = "no")
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.0-0.tar.gz",#
              destfile = "vimcom_1.0-0.tar.gz")
install.packages("vimcom_1.0-0.tar.gz", type = "source",#
                  repos = NULL)
sessionInfo()
library(vimcom)
update.packages()
source("/Users/david/Dropbox/Prospectus/9_16.Rmd")
source("/Users/david/Dropbox/Prospectus/9_23.Rmd")
library(UCDPtools)
library(dplyr)
library(UCDPtools)
library(dplyr)
actors <- read.delim("http://privatewww.essex.ac.uk/~ksg/data/nsa_v3.4_21November2013.asc")
actors.agg <- group_by(actors, ucdpid)
actors.conflict <- summarize(actors.agg, dyads = n_distinct(dyadid))
rm(actors.agg)
source("/Users/david/Library/Application Support/Sublime Text 3/Packages/SublimePeek/help-compiler/R-help.r")
update.packages()
library("effects")
update.packages()
y
install.packages("ggplot2")
library(devtools)
install.packages("devtools")
library(devtools)
install_github('jimhester/lintr')
setwd("/Users/david/Dropbox/Dissertation Sources,/Users/david/Dropbox/Prospectus")
library(dplyr)
update.packages()
system(say "done")
system(say done)
system(say,"done")
system(say("done"))
system(say)
system(say "hi")
---#
title: "Politics Among Rebels: The Determinants of Conflict and Cooperation Between Non-State Combatants"#
author: "David Bowden"#
documentclass: article#
fontsize: 12pt#
fontfamily: tgpagella#
geometry: margin=1in#
numbersections: true#
bibliography: /Users/david/Dropbox/library.bib#
csl: /Users/david/.pandoc/csl/apsa.csl#
header-includes:#
    - \usepackage{setspace}#
    - \doublespacing#
abstract: #
	Rebel groups face a dilemma. On the one hand, pursuing control of natural resources, territory, and civilian populations within the country may be a good strategy for enhancing their strength relative to the government. On the other hand, this tactic often brings the risk of becoming entangled in conflict with other non-state actors, ultimately proving counterproductive. I argue that control of natural resources is often a worthwhile risk for rebels, particularly when they are losing the conflict. Non-state actors also experience conflicts of interest over control of territory, which tend to be acted upon by rebels that are experiencing success in the conflict. Under some circumstances, however, rebels are able to partition territory and access to resources, minimizing the scope of conflict with each other.#
    <!-- put Research Q in abstract -->#
---
system("say finished")
acled <- read.csv("~/Documents/Data/ACLED Version 6 All Africa 1997-2015_csv_dyadic.csv",fileEncoding="macintosh")
colnames(acled)
nig <- subset(acled, GWNO==475)
levels(nig$ADMIN1)
nig <- subset(ngi, ADMIN1=="Nasarawa" | ADMIN1=="Benue")
nig <- subset(nig, ADMIN1=="Nasarawa" | ADMIN1=="Benue")
head(nig)
length(nig$GWNO)
View(nig)
table(nig$INTERACTION)
qplot(nig$INTERACTION)
library(ggplot2)
qplot(nig$INTERACTION)
with(subset(nig,INTER1==4),levels(ACTOR1))
with(subset(nig,INTER1==4),ACTOR1)
sum(nig$FATALITIES)
with(gled,t.test(duration ~ joiner))
ls()
install.packages("Zelig")
library(Zelig)
install.packages("graph")
install.packages("~/Downloads/graph_1.30.0.tar.gz",repos=NULL, type="source")
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite("graph")
install.packages("Zelig")
library(Zelig)
install.packages("Rgraphviz")
biocLite("Rgraphviz")
library(Zelig)
ls()
rm(con,map)
ls()
library(igraph)#
library(dplyr)#
library(tidyr)#
library(stringr)#
library(lubridate)#
library(readr)#
library(ggplot2)#
theme_set(theme_bw())#
#
pal <- read_csv("~/Dropbox/Prospectus/Diss Network/pal_diss.csv")
install.packages(c('repr', 'IRkernel', 'IRdisplay'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))#
IRkernel::installspec()
IRkernel::installspec()
install.packages(c('repr', 'IRkernel', 'IRdisplay'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('repr'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('IRKernel'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('IRkernel'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages("rzmq")
install.packages(c('IRkernel'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('IRdisplay'),#
                 repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
IRkernel::installspec()
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
library(lubridate)
ymd("1997-02-01")
st = ymd("1997-02-01")
st + months(18)
library(readr)
install.package("lintr")
install.packages("lintr")
library(foreign)#
library(dplyr)
install.packages(c('repr', 'pbdZMQ', 'devtools'))
devtools::install_github('irkernel/IRdisplay')
devtools::install_github('irkernel/IRkernel')
library(dplyr)#
library(tidyr)#
library(stringr)#
library(readr)#
library(lubridate)#
library(zoo)#
library(ggplot2)#
theme_set(theme_bw())
icews <- read.csv("~/Google Drive/Dissertation Data/networkcreation/icews_groups.csv", stringsAsFactors = FALSE)
#fix dates#
icews$date <- ymd(icews$date)#
icews$ym <- floor_date(icews$date,"month")
#subset to actors likely to be afghan dissidents#
iraq <- subset(icews, cow.src==645 & agent.src!="BUS" & (cow.tgt==645 | cow.tgt==2) & agent.src!="GOV" & date > "2003-03-31")
#remove a few things that aren't formal groups#
iraq <- subset(iraq, alt.src!="Iraqi Kurdistan" & alt.src!="Iraqi Kurds" & alt.src!="Naji Sabri" & alt.src!="Jalal Talabani" & alt.src!="Hoshyar Zebari" & alt.src!="Adnan Pachachi")
#code a few individuals that weren't in the dictionary#
iraq$alt.src[iraq$alt.src=="Massoud Barzani"] <- "Kurdistan Democratic Party"#
iraq$alt.src[iraq$alt.src=="Ahmad Chalabi"] <- "Iraqi National Congress"
#use group name instead of individual name when available#
#iraq$alt.src <- ifelse(is.na(iraq$src.groups)==T, iraq$alt.src, iraq$src.groups)#
unique(iraq$alt.src)
rm(list=ls())
ls()
update.packages()
library(dplyr)
library(dplyr)#
library(tidyr)#
library(stringr)#
library(readr)#
library(lubridate)#
library(zoo)#
library(ggplot2)#
theme_set(theme_bw())
#import icews w/ group names added for individuals#
icews <- read.csv("../ICEWS_Processing/icews_with_groups.csv", stringsAsFactors = FALSE)
update.packages()
JGR()
library(JGR)
JGR()
matched_transfers <- read.csv("~/Box Sync/Compliance Paper/Trade/R&P Replication/matched_transfers.csv")
m5 <- lm(log(post_trade+1) ~ agreement + log(tot_gdp) + log(tot_pop) + joint_dem + rivals + any_contiguity + portion, data=matched_transfers)
To further establish the validity of the findings above, I conduct a number of robustness checks. First, to facilitate causal inference, I use a genetic algorithm [@Diamond2013] to match pairs of observations with and without agreements on every covariate that statistically differs betIen the two groups in the raw data. While the groups differ on seven variables prior to matching, after matching no statistically significant differences remain. After matching, agreements continue to have a significant relationship with trade. In fact, the magnitude is even larger than in the raw data, with agreements leading to a 138% increase in trade flows (see M)
m6 <- lm(log(post_trade+1) ~  agreement + log(tot_gdp) + log(tot_pop) + joint_dem + rivals + any_contiguity + portion + settle, data=all_transfers)
all_transfers <- read.csv("~/Box Sync/Compliance Paper/Trade/R&P Replication/all_transfers.csv")
install.packages("multiwaycov")
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(readr)
library(lubridate)
theme_set(theme_bw())
read.csv("~/Dropbox/Dissertation/Analyses/epr_group_formation/EPR-2014.csv")
devtools::install("/Users/david/Dropbox/Dissertation/Document/formation_chapter")
rmarkdown::render("/Users/david/Dropbox/Dissertation/Document/formation_chapter/formation_chapter.Rmd", encoding = "UTF-8")
devtools::install("/Users/david/Dropbox/Dissertation/Document/formation_chapter")
install.packages("root")
cov <- read.csv("~/Box Sync/ISAMW16/isamw16_analysis/old/syria_covariates.csv")
library(readr)
library(dplyr)
cov <- read.csv("~/Dropbox/Dissertation/Analyses/Alliance_Network_Chapter/isamw16_analysis/old/syria_covariates.csv")
names <- cov[,1:2]
colnames(names) <- c("Group Name", "Abbreviations")
library(xtable)
options(xtable.comment = FALSE)
load("/Users/david/Dropbox/Civil War Data/master_rebel_yearly.Rdata")
ls()
rm(cov, names)
head(ucdp.dyad)
library(dplyr)
install.packages("tidyverse")
??preprocess
library(dplyr)#
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds") #built by afrobarometer_dataprep.R#
#
#count responses by country by wave#
bycountry <- afro %>%#
  group_by(COUNTRY) %>%#
  summarize(wave6=sum(wave==6), wave5=sum(wave==5), wave4=sum(wave==4), wave3=sum(wave==3))
colnames(bycountry) <- c("Country", `Wave 6`, `Wave 5`, `Wave 4`, `Wave 3`)
colnames(bycountry) <- c("Country", "`Wave 6`", "`Wave 5`", "`Wave 4`", "`Wave 3`")
head(bycountry)
colnames(bycountry)
colnames(bycountry) <- c("Country", "Wave 6", "Wave 5", "Wave 4", "Wave 3")
colnames(bycountry)
xtable::xtable(bycountry, caption="Survey Responses by Country and Wave")
library(xtable)
library(sjmisc)
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds") #built by afrobarometer_dataprep.R
library(lme4)
library(texreg)
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
h4 <- glmer(vote_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + ag + (1 | Country), data=afro, family=binomial("logit"), weights=withinwt)
table(afro$separatist)
table(afro$civil)
table(afro$attack_recode_bin)
table(afro$intim_recode_bin)
table(afro$employment_recode)
table(afro$primary)
table(afro$urban_recode)
table(afro$ruling_supporter)
table(afro$sex)
table(afro$age)
table(afro$ag)
str(afro)
h4 <- glmer(vote_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1 | Country), data=afro, family=binomial("logit"), weights=withinwt)
str(afor$ag)
str(afro$ag)
h4 <- glmer(vote_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + ag + (1 | Country), data=afro, family=binomial("logit"), weights=withinwt)
h4 <- glmer(vote_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex + (1 | Country), data=afro, family=binomial("logit"), weights=withinwt)
summary(h4)
library(lme4)
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")
h4 <- glmer(vote_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic) + (1 | Year), data=afro, family=binomial("logit"), weights=withinwt)#
#
h5 <- glmer(meeting_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + primary + educ_recode + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic) + (1 | Year), data=afro, family=binomial("logit"), weights=withinwt)#
#
h6 <- glmer(protest_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic) + (1 | Year), data=afro, family=binomial("logit"), weights=withinwt)#
#
h7 <- glmer(violence_recode ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic) + (1 | Year), data=afro, family=binomial("logit"), weights=withinwt)#
#
h8 <- glmer(violence_willing ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic) + (1|Year), data=afro, family=binomial("logit"), weights=withinwt)#
#
# Ethnic identity models ----#
#
h1 <- glmer(eth_id_bin ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country), data=afro, family=binomial("logit"), weights=withinwt)#
#
h2 <- glmer(eth_id_bin ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country / Ethnic), data=afro, family=binomial("logit"), weights=withinwt)#
#
h3 <- glmer(eth_id_bin ~ latentmean + I(ethfrac^2) + ethfrac + polity2 + separatist + civil + attack_recode_bin + intim_recode_bin  + employment_recode + primary + urban_recode + ruling_supporter + lage + sex +  (1 | Country/Ethnic) + (1|Year), data=subset(afro, !is.na(Ethnic)), family=binomial("logit"), weights=withinwt)
library(dplyr)#
#
load("/Users/david/Dropbox/Dissertation/Document/survey_chapter/survey_data/merged_afrobarometer.Rds")#
#
# make complete cases#
match.data <- select(afro, attack_recode_bin, educ, lage, sex, urban, ruling, ag, employment_recode)#
#
match.data <- subset(match.data, complete.cases(match.data)==T)
t.test(ag ~ attack_recode_bin, data=match.data)
t.test(ag ~ (attack_recode_bin)==1, data=match.data)
class(match.data$attack_recode_bin)
match.data$attack_recode_bin <- as.numeric(match.data$attack_recode_bin)
t.test(ag ~ (attack_recode_bin)==1, data=match.data)
chisq.test(table(match.data$ag, match.data$attack_recode_bin))
table(match.data$ag, match.data$attack_recode_bin)
m1 <- glm(new.joiner ~ latentmean_lag + cont_civil + lgdp + lpop + larea + ethfrac, data=data.frame(country_year), family=binomial("logit"))
names <- c("sam", "david", "Sally", "mark")
sample(names, 1)
sample(names, 2)
?sample
sample(names, 1)
library(lmtest)
library(pglm)
library(plm)
library(texreg)
library(sjmisc)
install.packages('TMB', type = 'source')
install.packages("tinytex")
tinytex::install_tinytex()
library(dplyr)
library(tidyr)
library(stringr)
library(foreign)
library(gdata)
library(readr)
library(readxl)
library(WDI)
library(countrycode)
load("entry_analysis/master_rebel_yearly.Rdata")
setwd("/Users/david/Dropbox/entry_manuscript/entry_analysis")
load("entry_analysis/master_rebel_yearly.Rdata")
load("master_rebel_yearly.Rdata")
